'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión de runtime:4.0.30319.42000
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On


Namespace Agrovoc
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.ServiceContractAttribute([Namespace]:="http://aos.aims.fao.org", ConfigurationName:="Agrovoc.SKOSWS")>  _
    Public Interface SKOSWS
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true)>  _
        Sub close()
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*")>  _
        Function closeAsync() As System.Threading.Tasks.Task
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true)>  _
        Function getTermCodeByTermAndLangXML(ByVal ontologyName As String, ByVal term As String, ByVal lang As String, ByVal codeName As String, ByVal format As String) As <System.ServiceModel.MessageParameterAttribute(Name:="getTermCodeByTermAndLangXMLReturn")> String
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*")>  _
        Function getTermCodeByTermAndLangXMLAsync(ByVal ontologyName As String, ByVal term As String, ByVal lang As String, ByVal codeName As String, ByVal format As String) As <System.ServiceModel.MessageParameterAttribute(Name:="getTermCodeByTermAndLangXMLReturn")> System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true)>  _
        Function getDefinitionsByClassName(ByVal ontologyName As String, ByVal className As String, ByVal format As String, ByVal outputlang As String) As <System.ServiceModel.MessageParameterAttribute(Name:="getDefinitionsByClassNameReturn")> String
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*")>  _
        Function getDefinitionsByClassNameAsync(ByVal ontologyName As String, ByVal className As String, ByVal format As String, ByVal outputlang As String) As <System.ServiceModel.MessageParameterAttribute(Name:="getDefinitionsByClassNameReturn")> System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true)>  _
        Function getTermsByCodesAndLanguage(ByVal ontologyName As String, ByVal termcode As String, ByVal codeName As String, ByVal format As String, ByVal lang As String) As <System.ServiceModel.MessageParameterAttribute(Name:="getTermsByCodesAndLanguageReturn")> String
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*")>  _
        Function getTermsByCodesAndLanguageAsync(ByVal ontologyName As String, ByVal termcode As String, ByVal codeName As String, ByVal format As String, ByVal lang As String) As <System.ServiceModel.MessageParameterAttribute(Name:="getTermsByCodesAndLanguageReturn")> System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true)>  _
        Function getDefinitionsByURI(ByVal ontologyName As String, ByVal conceptURI As String, ByVal format As String, ByVal outputlang As String) As <System.ServiceModel.MessageParameterAttribute(Name:="getDefinitionsByURIReturn")> String
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*")>  _
        Function getDefinitionsByURIAsync(ByVal ontologyName As String, ByVal conceptURI As String, ByVal format As String, ByVal outputlang As String) As <System.ServiceModel.MessageParameterAttribute(Name:="getDefinitionsByURIReturn")> System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true)>  _
        Function getAgrovocCSLanguagesExpand() As <System.ServiceModel.MessageParameterAttribute(Name:="getAgrovocCSLanguagesExpandReturn")> String
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*")>  _
        Function getAgrovocCSLanguagesExpandAsync() As <System.ServiceModel.MessageParameterAttribute(Name:="getAgrovocCSLanguagesExpandReturn")> System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true)>  _
        Function getConceptInfoByClassName(ByVal ontologyName As String, ByVal conceptName As String, ByVal format As String) As <System.ServiceModel.MessageParameterAttribute(Name:="getConceptInfoByClassNameReturn")> String
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*")>  _
        Function getConceptInfoByClassNameAsync(ByVal ontologyName As String, ByVal conceptName As String, ByVal format As String) As <System.ServiceModel.MessageParameterAttribute(Name:="getConceptInfoByClassNameReturn")> System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true)>  _
        Function getConceptInfoByURI(ByVal ontologyName As String, ByVal conceptURI As String, ByVal format As String) As <System.ServiceModel.MessageParameterAttribute(Name:="getConceptInfoByURIReturn")> String
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*")>  _
        Function getConceptInfoByURIAsync(ByVal ontologyName As String, ByVal conceptURI As String, ByVal format As String) As <System.ServiceModel.MessageParameterAttribute(Name:="getConceptInfoByURIReturn")> System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true)>  _
        Function getDataTypeRelationship(ByVal ontologyName As String) As <System.ServiceModel.MessageParameterAttribute(Name:="getDataTypeRelationshipReturn")> String
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*")>  _
        Function getDataTypeRelationshipAsync(ByVal ontologyName As String) As <System.ServiceModel.MessageParameterAttribute(Name:="getDataTypeRelationshipReturn")> System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true)>  _
        Function getObjectPropertyRelationship(ByVal ontologyName As String) As <System.ServiceModel.MessageParameterAttribute(Name:="getObjectPropertyRelationshipReturn")> String
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*")>  _
        Function getObjectPropertyRelationshipAsync(ByVal ontologyName As String) As <System.ServiceModel.MessageParameterAttribute(Name:="getObjectPropertyRelationshipReturn")> System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true)>  _
        Function getAgrovocCSModules() As <System.ServiceModel.MessageParameterAttribute(Name:="getAgrovocCSModulesReturn")> String
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*")>  _
        Function getAgrovocCSModulesAsync() As <System.ServiceModel.MessageParameterAttribute(Name:="getAgrovocCSModulesReturn")> System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true)>  _
        Function getAgrovocCSLanguages() As <System.ServiceModel.MessageParameterAttribute(Name:="getAgrovocCSLanguagesReturn")> String
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*")>  _
        Function getAgrovocCSLanguagesAsync() As <System.ServiceModel.MessageParameterAttribute(Name:="getAgrovocCSLanguagesReturn")> System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true)>  _
        Function getTermsByClassName(ByVal ontologyName As String, ByVal className As String, ByVal descriptor As String, ByVal format As String, ByVal status As String) As <System.ServiceModel.MessageParameterAttribute(Name:="getTermsByClassNameReturn")> String
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*")>  _
        Function getTermsByClassNameAsync(ByVal ontologyName As String, ByVal className As String, ByVal descriptor As String, ByVal format As String, ByVal status As String) As <System.ServiceModel.MessageParameterAttribute(Name:="getTermsByClassNameReturn")> System.Threading.Tasks.Task(Of String)
        
        'CODEGEN: El parámetro 'outlang' requiere información adicional de esquema que no se puede capturar con el modo de parámetros. El atributo específico es 'System.Xml.Serialization.XmlElementAttribute'.
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true)>  _
        Function searchByModeLangScopeXML(ByVal request As Agrovoc.searchByModeLangScopeXMLRequest) As <System.ServiceModel.MessageParameterAttribute(Name:="searchByModeLangScopeXMLReturn")> Agrovoc.searchByModeLangScopeXMLResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*")>  _
        Function searchByModeLangScopeXMLAsync(ByVal request As Agrovoc.searchByModeLangScopeXMLRequest) As System.Threading.Tasks.Task(Of Agrovoc.searchByModeLangScopeXMLResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true)>  _
        Function simpleSearchByMode2(ByVal searchString As String, ByVal searchmode As String, ByVal separator As String) As <System.ServiceModel.MessageParameterAttribute(Name:="simpleSearchByMode2Return")> String
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*")>  _
        Function simpleSearchByMode2Async(ByVal searchString As String, ByVal searchmode As String, ByVal separator As String) As <System.ServiceModel.MessageParameterAttribute(Name:="simpleSearchByMode2Return")> System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true)>  _
        Function complexSearchByTermXML(ByVal searchString As String, ByVal separator As String, ByVal format As String) As <System.ServiceModel.MessageParameterAttribute(Name:="complexSearchByTermXMLReturn")> String
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*")>  _
        Function complexSearchByTermXMLAsync(ByVal searchString As String, ByVal separator As String, ByVal format As String) As <System.ServiceModel.MessageParameterAttribute(Name:="complexSearchByTermXMLReturn")> System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true)>  _
        Function getConceptRelationshipList(ByVal clsName As String, ByVal OntolgoyDatabase As String) As <System.ServiceModel.MessageParameterAttribute(Name:="getConceptRelationshipListReturn")> String
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*")>  _
        Function getConceptRelationshipListAsync(ByVal clsName As String, ByVal OntolgoyDatabase As String) As <System.ServiceModel.MessageParameterAttribute(Name:="getConceptRelationshipListReturn")> System.Threading.Tasks.Task(Of String)
        
        'CODEGEN: El parámetro 'getConceptInfoByTermcodeReturn' requiere información adicional de esquema que no se puede capturar con el modo de parámetros. El atributo específico es 'System.Xml.Serialization.XmlElementAttribute'.
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true)>  _
        Function getConceptInfoByTermcode(ByVal request As Agrovoc.getConceptInfoByTermcodeRequest) As <System.ServiceModel.MessageParameterAttribute(Name:="getConceptInfoByTermcodeReturn")> Agrovoc.getConceptInfoByTermcodeResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*")>  _
        Function getConceptInfoByTermcodeAsync(ByVal request As Agrovoc.getConceptInfoByTermcodeRequest) As System.Threading.Tasks.Task(Of Agrovoc.getConceptInfoByTermcodeResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true)>  _
        Function getConceptInfoByTermcodeXML(ByVal searchTerm As String, ByVal format As String) As <System.ServiceModel.MessageParameterAttribute(Name:="getConceptInfoByTermcodeXMLReturn")> String
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*")>  _
        Function getConceptInfoByTermcodeXMLAsync(ByVal searchTerm As String, ByVal format As String) As <System.ServiceModel.MessageParameterAttribute(Name:="getConceptInfoByTermcodeXMLReturn")> System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true)>  _
        Function getAuthoritySegment(ByVal ontologyName As String, ByVal integerFrom As Integer, ByVal integerTo As Integer, ByVal format As String) As <System.ServiceModel.MessageParameterAttribute(Name:="getAuthoritySegmentReturn")> String
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*")>  _
        Function getAuthoritySegmentAsync(ByVal ontologyName As String, ByVal integerFrom As Integer, ByVal integerTo As Integer, ByVal format As String) As <System.ServiceModel.MessageParameterAttribute(Name:="getAuthoritySegmentReturn")> System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true)>  _
        Function getAllTermInSubClass(ByVal clsName As String, ByVal OntolgoyDatabase As String) As <System.ServiceModel.MessageParameterAttribute(Name:="getAllTermInSubClassReturn")> String
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*")>  _
        Function getAllTermInSubClassAsync(ByVal clsName As String, ByVal OntolgoyDatabase As String) As <System.ServiceModel.MessageParameterAttribute(Name:="getAllTermInSubClassReturn")> System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true)>  _
        Function getTermCodeByTermXML(ByVal term As String, ByVal format As String) As <System.ServiceModel.MessageParameterAttribute(Name:="getTermCodeByTermXMLReturn")> String
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*")>  _
        Function getTermCodeByTermXMLAsync(ByVal term As String, ByVal format As String) As <System.ServiceModel.MessageParameterAttribute(Name:="getTermCodeByTermXMLReturn")> System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true)>  _
        Function getTermByLanguage(ByVal termcode As String, ByVal language As String) As <System.ServiceModel.MessageParameterAttribute(Name:="getTermByLanguageReturn")> String
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*")>  _
        Function getTermByLanguageAsync(ByVal termcode As String, ByVal language As String) As <System.ServiceModel.MessageParameterAttribute(Name:="getTermByLanguageReturn")> System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true)>  _
        Function getRejectedConcepts(ByVal authorityFile As String, ByVal dateFrom As String, ByVal dateTo As String, ByVal integerFrom As Integer, ByVal integerTo As Integer, ByVal format As String) As <System.ServiceModel.MessageParameterAttribute(Name:="getRejectedConceptsReturn")> String
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*")>  _
        Function getRejectedConceptsAsync(ByVal authorityFile As String, ByVal dateFrom As String, ByVal dateTo As String, ByVal integerFrom As Integer, ByVal integerTo As Integer, ByVal format As String) As <System.ServiceModel.MessageParameterAttribute(Name:="getRejectedConceptsReturn")> System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true)>  _
        Function getConceptByKeyword2(ByVal ontologyName As String, ByVal searchString As String, ByVal format As String, ByVal searchMode As String, ByVal lang As String, ByVal outlang As String) As <System.ServiceModel.MessageParameterAttribute(Name:="getConceptByKeyword2Return")> String
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*")>  _
        Function getConceptByKeyword2Async(ByVal ontologyName As String, ByVal searchString As String, ByVal format As String, ByVal searchMode As String, ByVal lang As String, ByVal outlang As String) As <System.ServiceModel.MessageParameterAttribute(Name:="getConceptByKeyword2Return")> System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true)>  _
        Function getConceptByRelationshipValue(ByVal ontologyName As String, ByVal relationURI As String, ByVal value As String, ByVal searchMode As String, ByVal lang As String, ByVal format As String) As <System.ServiceModel.MessageParameterAttribute(Name:="getConceptByRelationshipValueReturn")> String
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*")>  _
        Function getConceptByRelationshipValueAsync(ByVal ontologyName As String, ByVal relationURI As String, ByVal value As String, ByVal searchMode As String, ByVal lang As String, ByVal format As String) As <System.ServiceModel.MessageParameterAttribute(Name:="getConceptByRelationshipValueReturn")> System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true)>  _
        Function getConceptByKeyword(ByVal ontologyName As String, ByVal searchString As String, ByVal format As String, ByVal searchMode As String, ByVal lang As String) As <System.ServiceModel.MessageParameterAttribute(Name:="getConceptByKeywordReturn")> String
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*")>  _
        Function getConceptByKeywordAsync(ByVal ontologyName As String, ByVal searchString As String, ByVal format As String, ByVal searchMode As String, ByVal lang As String) As <System.ServiceModel.MessageParameterAttribute(Name:="getConceptByKeywordReturn")> System.Threading.Tasks.Task(Of String)
        
        'CODEGEN: El parámetro 'outlang' requiere información adicional de esquema que no se puede capturar con el modo de parámetros. El atributo específico es 'System.Xml.Serialization.XmlElementAttribute'.
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true)>  _
        Function simpleSearchByModeLangXML(ByVal request As Agrovoc.simpleSearchByModeLangXMLRequest) As <System.ServiceModel.MessageParameterAttribute(Name:="simpleSearchByModeLangXMLReturn")> Agrovoc.simpleSearchByModeLangXMLResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*")>  _
        Function simpleSearchByModeLangXMLAsync(ByVal request As Agrovoc.simpleSearchByModeLangXMLRequest) As System.Threading.Tasks.Task(Of Agrovoc.simpleSearchByModeLangXMLResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true)>  _
        Function getAllLabelsByTermcode2(ByVal termcode As String, ByVal separator As String) As <System.ServiceModel.MessageParameterAttribute(Name:="getAllLabelsByTermcode2Return")> String
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*")>  _
        Function getAllLabelsByTermcode2Async(ByVal termcode As String, ByVal separator As String) As <System.ServiceModel.MessageParameterAttribute(Name:="getAllLabelsByTermcode2Return")> System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true)>  _
        Function getTermCodeByTerm(ByVal term As String) As <System.ServiceModel.MessageParameterAttribute(Name:="getTermCodeByTermReturn")> String
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*")>  _
        Function getTermCodeByTermAsync(ByVal term As String) As <System.ServiceModel.MessageParameterAttribute(Name:="getTermCodeByTermReturn")> System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true)>  _
        Function getURIByTermAndLangXML(ByVal ontologyName As String, ByVal term As String, ByVal searchMode As String, ByVal format As String, ByVal lang As String) As <System.ServiceModel.MessageParameterAttribute(Name:="getURIByTermAndLangXMLReturn")> String
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*")>  _
        Function getURIByTermAndLangXMLAsync(ByVal ontologyName As String, ByVal term As String, ByVal searchMode As String, ByVal format As String, ByVal lang As String) As <System.ServiceModel.MessageParameterAttribute(Name:="getURIByTermAndLangXMLReturn")> System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true)>  _
        Function getWebServicesVersion() As <System.ServiceModel.MessageParameterAttribute(Name:="getWebServicesVersionReturn")> String
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*")>  _
        Function getWebServicesVersionAsync() As <System.ServiceModel.MessageParameterAttribute(Name:="getWebServicesVersionReturn")> System.Threading.Tasks.Task(Of String)
        
        'CODEGEN: El parámetro 'getDefinitionsReturn' requiere información adicional de esquema que no se puede capturar con el modo de parámetros. El atributo específico es 'System.Xml.Serialization.XmlElementAttribute'.
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true)>  _
        Function getDefinitions(ByVal request As Agrovoc.getDefinitionsRequest) As <System.ServiceModel.MessageParameterAttribute(Name:="getDefinitionsReturn")> Agrovoc.getDefinitionsResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*")>  _
        Function getDefinitionsAsync(ByVal request As Agrovoc.getDefinitionsRequest) As System.Threading.Tasks.Task(Of Agrovoc.getDefinitionsResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true)>  _
        Function getTermExpansion(ByVal ontologyName As String, ByVal searchString As String, ByVal format As String, ByVal searchMode As String, ByVal lang As String) As <System.ServiceModel.MessageParameterAttribute(Name:="getTermExpansionReturn")> String
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*")>  _
        Function getTermExpansionAsync(ByVal ontologyName As String, ByVal searchString As String, ByVal format As String, ByVal searchMode As String, ByVal lang As String) As <System.ServiceModel.MessageParameterAttribute(Name:="getTermExpansionReturn")> System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true)>  _
        Function getStatusConcept(ByVal ontologyName As String, ByVal conceptURI As String, ByVal lang As String) As <System.ServiceModel.MessageParameterAttribute(Name:="getStatusConceptReturn")> String
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*")>  _
        Function getStatusConceptAsync(ByVal ontologyName As String, ByVal conceptURI As String, ByVal lang As String) As <System.ServiceModel.MessageParameterAttribute(Name:="getStatusConceptReturn")> System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true)>  _
        Function getStatusList(ByVal ontologyName As String) As <System.ServiceModel.MessageParameterAttribute(Name:="getStatusListReturn")> String
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*")>  _
        Function getStatusListAsync(ByVal ontologyName As String) As <System.ServiceModel.MessageParameterAttribute(Name:="getStatusListReturn")> System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true)>  _
        Function getLanguageCode(ByVal localLang As String) As <System.ServiceModel.MessageParameterAttribute(Name:="getLanguageCodeReturn")> String
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*")>  _
        Function getLanguageCodeAsync(ByVal localLang As String) As <System.ServiceModel.MessageParameterAttribute(Name:="getLanguageCodeReturn")> System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true)>  _
        Function getStatusTerm(ByVal ontologyName As String, ByVal termCode As String, ByVal codeName As String, ByVal lang As String) As <System.ServiceModel.MessageParameterAttribute(Name:="getStatusTermReturn")> String
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*")>  _
        Function getStatusTermAsync(ByVal ontologyName As String, ByVal termCode As String, ByVal codeName As String, ByVal lang As String) As <System.ServiceModel.MessageParameterAttribute(Name:="getStatusTermReturn")> System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true)>  _
        Function reloadOWLModel(ByVal ontologyName As String) As <System.ServiceModel.MessageParameterAttribute(Name:="reloadOWLModelReturn")> String
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*")>  _
        Function reloadOWLModelAsync(ByVal ontologyName As String) As <System.ServiceModel.MessageParameterAttribute(Name:="reloadOWLModelReturn")> System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true)>  _
        Function getConceptObject(ByVal clsName As String, ByVal OntolgoyDatabase As String) As <System.ServiceModel.MessageParameterAttribute(Name:="getConceptObjectReturn")> String
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*")>  _
        Function getConceptObjectAsync(ByVal clsName As String, ByVal OntolgoyDatabase As String) As <System.ServiceModel.MessageParameterAttribute(Name:="getConceptObjectReturn")> System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true)>  _
        Function getLatestUpdates(ByVal ontologyName As String, ByVal dateFrom As String, ByVal dateTo As String, ByVal format As String) As <System.ServiceModel.MessageParameterAttribute(Name:="getLatestUpdatesReturn")> String
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*")>  _
        Function getLatestUpdatesAsync(ByVal ontologyName As String, ByVal dateFrom As String, ByVal dateTo As String, ByVal format As String) As <System.ServiceModel.MessageParameterAttribute(Name:="getLatestUpdatesReturn")> System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true)>  _
        Function getFullAuthority(ByVal ontologyName As String, ByVal searchString As String, ByVal searchMode As String, ByVal lang As String, ByVal format As String) As <System.ServiceModel.MessageParameterAttribute(Name:="getFullAuthorityReturn")> String
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*")>  _
        Function getFullAuthorityAsync(ByVal ontologyName As String, ByVal searchString As String, ByVal searchMode As String, ByVal lang As String, ByVal format As String) As <System.ServiceModel.MessageParameterAttribute(Name:="getFullAuthorityReturn")> System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true)>  _
        Function getListofURI(ByVal ontologyName As String, ByVal uriStart As String, ByVal numResult As String) As <System.ServiceModel.MessageParameterAttribute(Name:="getListofURIReturn")> String
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*")>  _
        Function getListofURIAsync(ByVal ontologyName As String, ByVal uriStart As String, ByVal numResult As String) As <System.ServiceModel.MessageParameterAttribute(Name:="getListofURIReturn")> System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true)>  _
        Function getTermsByURI(ByVal ontologyName As String, ByVal conceptURI As String, ByVal lang As String, ByVal descriptor As String, ByVal format As String, ByVal status As String) As <System.ServiceModel.MessageParameterAttribute(Name:="getTermsByURIReturn")> String
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*")>  _
        Function getTermsByURIAsync(ByVal ontologyName As String, ByVal conceptURI As String, ByVal lang As String, ByVal descriptor As String, ByVal format As String, ByVal status As String) As <System.ServiceModel.MessageParameterAttribute(Name:="getTermsByURIReturn")> System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true)>  _
        Function getConceptByURI(ByVal ontologyName As String, ByVal conceptURI As String, ByVal format As String) As <System.ServiceModel.MessageParameterAttribute(Name:="getConceptByURIReturn")> String
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*")>  _
        Function getConceptByURIAsync(ByVal ontologyName As String, ByVal conceptURI As String, ByVal format As String) As <System.ServiceModel.MessageParameterAttribute(Name:="getConceptByURIReturn")> System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true)>  _
        Function suggestTerm(ByVal ontologyName As String, ByVal label As String, ByVal lang As String, ByVal [namespace] As String, ByVal parentURI As String) As <System.ServiceModel.MessageParameterAttribute(Name:="suggestTermReturn")> String
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*")>  _
        Function suggestTermAsync(ByVal ontologyName As String, ByVal label As String, ByVal lang As String, ByVal [namespace] As String, ByVal parentURI As String) As <System.ServiceModel.MessageParameterAttribute(Name:="suggestTermReturn")> System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true)>  _
        Function getReleaseDate() As <System.ServiceModel.MessageParameterAttribute(Name:="getReleaseDateReturn")> String
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*")>  _
        Function getReleaseDateAsync() As <System.ServiceModel.MessageParameterAttribute(Name:="getReleaseDateReturn")> System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true)>  _
        Function getAvailableCode(ByVal ontologyName As String) As <System.ServiceModel.MessageParameterAttribute(Name:="getAvailableCodeReturn")> String
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*")>  _
        Function getAvailableCodeAsync(ByVal ontologyName As String) As <System.ServiceModel.MessageParameterAttribute(Name:="getAvailableCodeReturn")> System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true)>  _
        Function getCodesByURI(ByVal Ontology As String, ByVal ConceptURI As String, ByVal CodeName As String) As <System.ServiceModel.MessageParameterAttribute(Name:="getCodesByURIReturn")> String
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*")>  _
        Function getCodesByURIAsync(ByVal Ontology As String, ByVal ConceptURI As String, ByVal CodeName As String) As <System.ServiceModel.MessageParameterAttribute(Name:="getCodesByURIReturn")> System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true)>  _
        Function getPossibleRelationsFromConceptURI(ByVal ontologyName As String, ByVal conceptURI As String, ByVal relationType As String) As <System.ServiceModel.MessageParameterAttribute(Name:="getPossibleRelationsFromConceptURIReturn")> String
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*")>  _
        Function getPossibleRelationsFromConceptURIAsync(ByVal ontologyName As String, ByVal conceptURI As String, ByVal relationType As String) As <System.ServiceModel.MessageParameterAttribute(Name:="getPossibleRelationsFromConceptURIReturn")> System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true)>  _
        Function getRelatedValuesFromConceptURIRelationURI(ByVal ontologyName As String, ByVal conceptURI As String, ByVal relationURI As String) As <System.ServiceModel.MessageParameterAttribute(Name:="getRelatedValuesFromConceptURIRelationURIReturn")> String
        
        <System.ServiceModel.OperationContractAttribute(Action:="", ReplyAction:="*")>  _
        Function getRelatedValuesFromConceptURIRelationURIAsync(ByVal ontologyName As String, ByVal conceptURI As String, ByVal relationURI As String) As <System.ServiceModel.MessageParameterAttribute(Name:="getRelatedValuesFromConceptURIRelationURIReturn")> System.Threading.Tasks.Task(Of String)
    End Interface
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="searchByModeLangScopeXML", WrapperNamespace:="http://aos.aims.fao.org", IsWrapped:=true)>  _
    Partial Public Class searchByModeLangScopeXMLRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://aos.aims.fao.org", Order:=0)>  _
        Public ontologyName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://aos.aims.fao.org", Order:=1)>  _
        Public searchString As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://aos.aims.fao.org", Order:=2)>  _
        Public format As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://aos.aims.fao.org", Order:=3)>  _
        Public searchMode As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://aos.aims.fao.org", Order:=4)>  _
        Public lang As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://aos.aims.fao.org", Order:=5),  _
         System.Xml.Serialization.XmlElementAttribute("outlang")>  _
        Public outlang() As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://aos.aims.fao.org", Order:=6)>  _
        Public scopeid As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal ontologyName As String, ByVal searchString As String, ByVal format As String, ByVal searchMode As String, ByVal lang As String, ByVal outlang() As String, ByVal scopeid As String)
            MyBase.New
            Me.ontologyName = ontologyName
            Me.searchString = searchString
            Me.format = format
            Me.searchMode = searchMode
            Me.lang = lang
            Me.outlang = outlang
            Me.scopeid = scopeid
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="searchByModeLangScopeXMLResponse", WrapperNamespace:="http://aos.aims.fao.org", IsWrapped:=true)>  _
    Partial Public Class searchByModeLangScopeXMLResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://aos.aims.fao.org", Order:=0)>  _
        Public searchByModeLangScopeXMLReturn As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal searchByModeLangScopeXMLReturn As String)
            MyBase.New
            Me.searchByModeLangScopeXMLReturn = searchByModeLangScopeXMLReturn
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getConceptInfoByTermcode", WrapperNamespace:="http://aos.aims.fao.org", IsWrapped:=true)>  _
    Partial Public Class getConceptInfoByTermcodeRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://aos.aims.fao.org", Order:=0)>  _
        Public termCode As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal termCode As String)
            MyBase.New
            Me.termCode = termCode
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getConceptInfoByTermcodeResponse", WrapperNamespace:="http://aos.aims.fao.org", IsWrapped:=true)>  _
    Partial Public Class getConceptInfoByTermcodeResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://aos.aims.fao.org", Order:=0),  _
         System.Xml.Serialization.XmlElementAttribute("getConceptInfoByTermcodeReturn")>  _
        Public getConceptInfoByTermcodeReturn() As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal getConceptInfoByTermcodeReturn() As String)
            MyBase.New
            Me.getConceptInfoByTermcodeReturn = getConceptInfoByTermcodeReturn
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="simpleSearchByModeLangXML", WrapperNamespace:="http://aos.aims.fao.org", IsWrapped:=true)>  _
    Partial Public Class simpleSearchByModeLangXMLRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://aos.aims.fao.org", Order:=0)>  _
        Public ontologyName As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://aos.aims.fao.org", Order:=1)>  _
        Public searchString As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://aos.aims.fao.org", Order:=2)>  _
        Public format As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://aos.aims.fao.org", Order:=3)>  _
        Public searchMode As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://aos.aims.fao.org", Order:=4)>  _
        Public lang As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://aos.aims.fao.org", Order:=5),  _
         System.Xml.Serialization.XmlElementAttribute("outlang")>  _
        Public outlang() As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal ontologyName As String, ByVal searchString As String, ByVal format As String, ByVal searchMode As String, ByVal lang As String, ByVal outlang() As String)
            MyBase.New
            Me.ontologyName = ontologyName
            Me.searchString = searchString
            Me.format = format
            Me.searchMode = searchMode
            Me.lang = lang
            Me.outlang = outlang
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="simpleSearchByModeLangXMLResponse", WrapperNamespace:="http://aos.aims.fao.org", IsWrapped:=true)>  _
    Partial Public Class simpleSearchByModeLangXMLResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://aos.aims.fao.org", Order:=0)>  _
        Public simpleSearchByModeLangXMLReturn As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal simpleSearchByModeLangXMLReturn As String)
            MyBase.New
            Me.simpleSearchByModeLangXMLReturn = simpleSearchByModeLangXMLReturn
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getDefinitions", WrapperNamespace:="http://aos.aims.fao.org", IsWrapped:=true)>  _
    Partial Public Class getDefinitionsRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://aos.aims.fao.org", Order:=0)>  _
        Public termcode As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://aos.aims.fao.org", Order:=1)>  _
        Public languagecode As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal termcode As String, ByVal languagecode As String)
            MyBase.New
            Me.termcode = termcode
            Me.languagecode = languagecode
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="getDefinitionsResponse", WrapperNamespace:="http://aos.aims.fao.org", IsWrapped:=true)>  _
    Partial Public Class getDefinitionsResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://aos.aims.fao.org", Order:=0),  _
         System.Xml.Serialization.XmlElementAttribute("getDefinitionsReturn")>  _
        Public getDefinitionsReturn() As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal getDefinitionsReturn() As String)
            MyBase.New
            Me.getDefinitionsReturn = getDefinitionsReturn
        End Sub
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Public Interface SKOSWSChannel
        Inherits Agrovoc.SKOSWS, System.ServiceModel.IClientChannel
    End Interface
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Public Class SKOSWSClient
        Inherits System.ServiceModel.ClientBase(Of Agrovoc.SKOSWS)
        Implements Agrovoc.SKOSWS
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String)
            MyBase.New(endpointConfigurationName)
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String, ByVal remoteAddress As String)
            MyBase.New(endpointConfigurationName, remoteAddress)
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
            MyBase.New(endpointConfigurationName, remoteAddress)
        End Sub
        
        Public Sub New(ByVal binding As System.ServiceModel.Channels.Binding, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
            MyBase.New(binding, remoteAddress)
        End Sub
        
        Public Sub close() Implements Agrovoc.SKOSWS.close
            MyBase.Channel.close
        End Sub
        
        Public Function closeAsync() As System.Threading.Tasks.Task Implements Agrovoc.SKOSWS.closeAsync
            Return MyBase.Channel.closeAsync
        End Function
        
        Public Function getTermCodeByTermAndLangXML(ByVal ontologyName As String, ByVal term As String, ByVal lang As String, ByVal codeName As String, ByVal format As String) As String Implements Agrovoc.SKOSWS.getTermCodeByTermAndLangXML
            Return MyBase.Channel.getTermCodeByTermAndLangXML(ontologyName, term, lang, codeName, format)
        End Function
        
        Public Function getTermCodeByTermAndLangXMLAsync(ByVal ontologyName As String, ByVal term As String, ByVal lang As String, ByVal codeName As String, ByVal format As String) As System.Threading.Tasks.Task(Of String) Implements Agrovoc.SKOSWS.getTermCodeByTermAndLangXMLAsync
            Return MyBase.Channel.getTermCodeByTermAndLangXMLAsync(ontologyName, term, lang, codeName, format)
        End Function
        
        Public Function getDefinitionsByClassName(ByVal ontologyName As String, ByVal className As String, ByVal format As String, ByVal outputlang As String) As String Implements Agrovoc.SKOSWS.getDefinitionsByClassName
            Return MyBase.Channel.getDefinitionsByClassName(ontologyName, className, format, outputlang)
        End Function
        
        Public Function getDefinitionsByClassNameAsync(ByVal ontologyName As String, ByVal className As String, ByVal format As String, ByVal outputlang As String) As System.Threading.Tasks.Task(Of String) Implements Agrovoc.SKOSWS.getDefinitionsByClassNameAsync
            Return MyBase.Channel.getDefinitionsByClassNameAsync(ontologyName, className, format, outputlang)
        End Function
        
        Public Function getTermsByCodesAndLanguage(ByVal ontologyName As String, ByVal termcode As String, ByVal codeName As String, ByVal format As String, ByVal lang As String) As String Implements Agrovoc.SKOSWS.getTermsByCodesAndLanguage
            Return MyBase.Channel.getTermsByCodesAndLanguage(ontologyName, termcode, codeName, format, lang)
        End Function
        
        Public Function getTermsByCodesAndLanguageAsync(ByVal ontologyName As String, ByVal termcode As String, ByVal codeName As String, ByVal format As String, ByVal lang As String) As System.Threading.Tasks.Task(Of String) Implements Agrovoc.SKOSWS.getTermsByCodesAndLanguageAsync
            Return MyBase.Channel.getTermsByCodesAndLanguageAsync(ontologyName, termcode, codeName, format, lang)
        End Function
        
        Public Function getDefinitionsByURI(ByVal ontologyName As String, ByVal conceptURI As String, ByVal format As String, ByVal outputlang As String) As String Implements Agrovoc.SKOSWS.getDefinitionsByURI
            Return MyBase.Channel.getDefinitionsByURI(ontologyName, conceptURI, format, outputlang)
        End Function
        
        Public Function getDefinitionsByURIAsync(ByVal ontologyName As String, ByVal conceptURI As String, ByVal format As String, ByVal outputlang As String) As System.Threading.Tasks.Task(Of String) Implements Agrovoc.SKOSWS.getDefinitionsByURIAsync
            Return MyBase.Channel.getDefinitionsByURIAsync(ontologyName, conceptURI, format, outputlang)
        End Function
        
        Public Function getAgrovocCSLanguagesExpand() As String Implements Agrovoc.SKOSWS.getAgrovocCSLanguagesExpand
            Return MyBase.Channel.getAgrovocCSLanguagesExpand
        End Function
        
        Public Function getAgrovocCSLanguagesExpandAsync() As System.Threading.Tasks.Task(Of String) Implements Agrovoc.SKOSWS.getAgrovocCSLanguagesExpandAsync
            Return MyBase.Channel.getAgrovocCSLanguagesExpandAsync
        End Function
        
        Public Function getConceptInfoByClassName(ByVal ontologyName As String, ByVal conceptName As String, ByVal format As String) As String Implements Agrovoc.SKOSWS.getConceptInfoByClassName
            Return MyBase.Channel.getConceptInfoByClassName(ontologyName, conceptName, format)
        End Function
        
        Public Function getConceptInfoByClassNameAsync(ByVal ontologyName As String, ByVal conceptName As String, ByVal format As String) As System.Threading.Tasks.Task(Of String) Implements Agrovoc.SKOSWS.getConceptInfoByClassNameAsync
            Return MyBase.Channel.getConceptInfoByClassNameAsync(ontologyName, conceptName, format)
        End Function
        
        Public Function getConceptInfoByURI(ByVal ontologyName As String, ByVal conceptURI As String, ByVal format As String) As String Implements Agrovoc.SKOSWS.getConceptInfoByURI
            Return MyBase.Channel.getConceptInfoByURI(ontologyName, conceptURI, format)
        End Function
        
        Public Function getConceptInfoByURIAsync(ByVal ontologyName As String, ByVal conceptURI As String, ByVal format As String) As System.Threading.Tasks.Task(Of String) Implements Agrovoc.SKOSWS.getConceptInfoByURIAsync
            Return MyBase.Channel.getConceptInfoByURIAsync(ontologyName, conceptURI, format)
        End Function
        
        Public Function getDataTypeRelationship(ByVal ontologyName As String) As String Implements Agrovoc.SKOSWS.getDataTypeRelationship
            Return MyBase.Channel.getDataTypeRelationship(ontologyName)
        End Function
        
        Public Function getDataTypeRelationshipAsync(ByVal ontologyName As String) As System.Threading.Tasks.Task(Of String) Implements Agrovoc.SKOSWS.getDataTypeRelationshipAsync
            Return MyBase.Channel.getDataTypeRelationshipAsync(ontologyName)
        End Function
        
        Public Function getObjectPropertyRelationship(ByVal ontologyName As String) As String Implements Agrovoc.SKOSWS.getObjectPropertyRelationship
            Return MyBase.Channel.getObjectPropertyRelationship(ontologyName)
        End Function
        
        Public Function getObjectPropertyRelationshipAsync(ByVal ontologyName As String) As System.Threading.Tasks.Task(Of String) Implements Agrovoc.SKOSWS.getObjectPropertyRelationshipAsync
            Return MyBase.Channel.getObjectPropertyRelationshipAsync(ontologyName)
        End Function
        
        Public Function getAgrovocCSModules() As String Implements Agrovoc.SKOSWS.getAgrovocCSModules
            Return MyBase.Channel.getAgrovocCSModules
        End Function
        
        Public Function getAgrovocCSModulesAsync() As System.Threading.Tasks.Task(Of String) Implements Agrovoc.SKOSWS.getAgrovocCSModulesAsync
            Return MyBase.Channel.getAgrovocCSModulesAsync
        End Function
        
        Public Function getAgrovocCSLanguages() As String Implements Agrovoc.SKOSWS.getAgrovocCSLanguages
            Return MyBase.Channel.getAgrovocCSLanguages
        End Function
        
        Public Function getAgrovocCSLanguagesAsync() As System.Threading.Tasks.Task(Of String) Implements Agrovoc.SKOSWS.getAgrovocCSLanguagesAsync
            Return MyBase.Channel.getAgrovocCSLanguagesAsync
        End Function
        
        Public Function getTermsByClassName(ByVal ontologyName As String, ByVal className As String, ByVal descriptor As String, ByVal format As String, ByVal status As String) As String Implements Agrovoc.SKOSWS.getTermsByClassName
            Return MyBase.Channel.getTermsByClassName(ontologyName, className, descriptor, format, status)
        End Function
        
        Public Function getTermsByClassNameAsync(ByVal ontologyName As String, ByVal className As String, ByVal descriptor As String, ByVal format As String, ByVal status As String) As System.Threading.Tasks.Task(Of String) Implements Agrovoc.SKOSWS.getTermsByClassNameAsync
            Return MyBase.Channel.getTermsByClassNameAsync(ontologyName, className, descriptor, format, status)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function Agrovoc_SKOSWS_searchByModeLangScopeXML(ByVal request As Agrovoc.searchByModeLangScopeXMLRequest) As Agrovoc.searchByModeLangScopeXMLResponse Implements Agrovoc.SKOSWS.searchByModeLangScopeXML
            Return MyBase.Channel.searchByModeLangScopeXML(request)
        End Function
        
        Public Function searchByModeLangScopeXML(ByVal ontologyName As String, ByVal searchString As String, ByVal format As String, ByVal searchMode As String, ByVal lang As String, ByVal outlang() As String, ByVal scopeid As String) As String
            Dim inValue As Agrovoc.searchByModeLangScopeXMLRequest = New Agrovoc.searchByModeLangScopeXMLRequest()
            inValue.ontologyName = ontologyName
            inValue.searchString = searchString
            inValue.format = format
            inValue.searchMode = searchMode
            inValue.lang = lang
            inValue.outlang = outlang
            inValue.scopeid = scopeid
            Dim retVal As Agrovoc.searchByModeLangScopeXMLResponse = CType(Me,Agrovoc.SKOSWS).searchByModeLangScopeXML(inValue)
            Return retVal.searchByModeLangScopeXMLReturn
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function Agrovoc_SKOSWS_searchByModeLangScopeXMLAsync(ByVal request As Agrovoc.searchByModeLangScopeXMLRequest) As System.Threading.Tasks.Task(Of Agrovoc.searchByModeLangScopeXMLResponse) Implements Agrovoc.SKOSWS.searchByModeLangScopeXMLAsync
            Return MyBase.Channel.searchByModeLangScopeXMLAsync(request)
        End Function
        
        Public Function searchByModeLangScopeXMLAsync(ByVal ontologyName As String, ByVal searchString As String, ByVal format As String, ByVal searchMode As String, ByVal lang As String, ByVal outlang() As String, ByVal scopeid As String) As System.Threading.Tasks.Task(Of Agrovoc.searchByModeLangScopeXMLResponse)
            Dim inValue As Agrovoc.searchByModeLangScopeXMLRequest = New Agrovoc.searchByModeLangScopeXMLRequest()
            inValue.ontologyName = ontologyName
            inValue.searchString = searchString
            inValue.format = format
            inValue.searchMode = searchMode
            inValue.lang = lang
            inValue.outlang = outlang
            inValue.scopeid = scopeid
            Return CType(Me,Agrovoc.SKOSWS).searchByModeLangScopeXMLAsync(inValue)
        End Function
        
        Public Function simpleSearchByMode2(ByVal searchString As String, ByVal searchmode As String, ByVal separator As String) As String Implements Agrovoc.SKOSWS.simpleSearchByMode2
            Return MyBase.Channel.simpleSearchByMode2(searchString, searchmode, separator)
        End Function
        
        Public Function simpleSearchByMode2Async(ByVal searchString As String, ByVal searchmode As String, ByVal separator As String) As System.Threading.Tasks.Task(Of String) Implements Agrovoc.SKOSWS.simpleSearchByMode2Async
            Return MyBase.Channel.simpleSearchByMode2Async(searchString, searchmode, separator)
        End Function
        
        Public Function complexSearchByTermXML(ByVal searchString As String, ByVal separator As String, ByVal format As String) As String Implements Agrovoc.SKOSWS.complexSearchByTermXML
            Return MyBase.Channel.complexSearchByTermXML(searchString, separator, format)
        End Function
        
        Public Function complexSearchByTermXMLAsync(ByVal searchString As String, ByVal separator As String, ByVal format As String) As System.Threading.Tasks.Task(Of String) Implements Agrovoc.SKOSWS.complexSearchByTermXMLAsync
            Return MyBase.Channel.complexSearchByTermXMLAsync(searchString, separator, format)
        End Function
        
        Public Function getConceptRelationshipList(ByVal clsName As String, ByVal OntolgoyDatabase As String) As String Implements Agrovoc.SKOSWS.getConceptRelationshipList
            Return MyBase.Channel.getConceptRelationshipList(clsName, OntolgoyDatabase)
        End Function
        
        Public Function getConceptRelationshipListAsync(ByVal clsName As String, ByVal OntolgoyDatabase As String) As System.Threading.Tasks.Task(Of String) Implements Agrovoc.SKOSWS.getConceptRelationshipListAsync
            Return MyBase.Channel.getConceptRelationshipListAsync(clsName, OntolgoyDatabase)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function Agrovoc_SKOSWS_getConceptInfoByTermcode(ByVal request As Agrovoc.getConceptInfoByTermcodeRequest) As Agrovoc.getConceptInfoByTermcodeResponse Implements Agrovoc.SKOSWS.getConceptInfoByTermcode
            Return MyBase.Channel.getConceptInfoByTermcode(request)
        End Function
        
        Public Function getConceptInfoByTermcode(ByVal termCode As String) As String()
            Dim inValue As Agrovoc.getConceptInfoByTermcodeRequest = New Agrovoc.getConceptInfoByTermcodeRequest()
            inValue.termCode = termCode
            Dim retVal As Agrovoc.getConceptInfoByTermcodeResponse = CType(Me,Agrovoc.SKOSWS).getConceptInfoByTermcode(inValue)
            Return retVal.getConceptInfoByTermcodeReturn
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function Agrovoc_SKOSWS_getConceptInfoByTermcodeAsync(ByVal request As Agrovoc.getConceptInfoByTermcodeRequest) As System.Threading.Tasks.Task(Of Agrovoc.getConceptInfoByTermcodeResponse) Implements Agrovoc.SKOSWS.getConceptInfoByTermcodeAsync
            Return MyBase.Channel.getConceptInfoByTermcodeAsync(request)
        End Function
        
        Public Function getConceptInfoByTermcodeAsync(ByVal termCode As String) As System.Threading.Tasks.Task(Of Agrovoc.getConceptInfoByTermcodeResponse)
            Dim inValue As Agrovoc.getConceptInfoByTermcodeRequest = New Agrovoc.getConceptInfoByTermcodeRequest()
            inValue.termCode = termCode
            Return CType(Me,Agrovoc.SKOSWS).getConceptInfoByTermcodeAsync(inValue)
        End Function
        
        Public Function getConceptInfoByTermcodeXML(ByVal searchTerm As String, ByVal format As String) As String Implements Agrovoc.SKOSWS.getConceptInfoByTermcodeXML
            Return MyBase.Channel.getConceptInfoByTermcodeXML(searchTerm, format)
        End Function
        
        Public Function getConceptInfoByTermcodeXMLAsync(ByVal searchTerm As String, ByVal format As String) As System.Threading.Tasks.Task(Of String) Implements Agrovoc.SKOSWS.getConceptInfoByTermcodeXMLAsync
            Return MyBase.Channel.getConceptInfoByTermcodeXMLAsync(searchTerm, format)
        End Function
        
        Public Function getAuthoritySegment(ByVal ontologyName As String, ByVal integerFrom As Integer, ByVal integerTo As Integer, ByVal format As String) As String Implements Agrovoc.SKOSWS.getAuthoritySegment
            Return MyBase.Channel.getAuthoritySegment(ontologyName, integerFrom, integerTo, format)
        End Function
        
        Public Function getAuthoritySegmentAsync(ByVal ontologyName As String, ByVal integerFrom As Integer, ByVal integerTo As Integer, ByVal format As String) As System.Threading.Tasks.Task(Of String) Implements Agrovoc.SKOSWS.getAuthoritySegmentAsync
            Return MyBase.Channel.getAuthoritySegmentAsync(ontologyName, integerFrom, integerTo, format)
        End Function
        
        Public Function getAllTermInSubClass(ByVal clsName As String, ByVal OntolgoyDatabase As String) As String Implements Agrovoc.SKOSWS.getAllTermInSubClass
            Return MyBase.Channel.getAllTermInSubClass(clsName, OntolgoyDatabase)
        End Function
        
        Public Function getAllTermInSubClassAsync(ByVal clsName As String, ByVal OntolgoyDatabase As String) As System.Threading.Tasks.Task(Of String) Implements Agrovoc.SKOSWS.getAllTermInSubClassAsync
            Return MyBase.Channel.getAllTermInSubClassAsync(clsName, OntolgoyDatabase)
        End Function
        
        Public Function getTermCodeByTermXML(ByVal term As String, ByVal format As String) As String Implements Agrovoc.SKOSWS.getTermCodeByTermXML
            Return MyBase.Channel.getTermCodeByTermXML(term, format)
        End Function
        
        Public Function getTermCodeByTermXMLAsync(ByVal term As String, ByVal format As String) As System.Threading.Tasks.Task(Of String) Implements Agrovoc.SKOSWS.getTermCodeByTermXMLAsync
            Return MyBase.Channel.getTermCodeByTermXMLAsync(term, format)
        End Function
        
        Public Function getTermByLanguage(ByVal termcode As String, ByVal language As String) As String Implements Agrovoc.SKOSWS.getTermByLanguage
            Return MyBase.Channel.getTermByLanguage(termcode, language)
        End Function
        
        Public Function getTermByLanguageAsync(ByVal termcode As String, ByVal language As String) As System.Threading.Tasks.Task(Of String) Implements Agrovoc.SKOSWS.getTermByLanguageAsync
            Return MyBase.Channel.getTermByLanguageAsync(termcode, language)
        End Function
        
        Public Function getRejectedConcepts(ByVal authorityFile As String, ByVal dateFrom As String, ByVal dateTo As String, ByVal integerFrom As Integer, ByVal integerTo As Integer, ByVal format As String) As String Implements Agrovoc.SKOSWS.getRejectedConcepts
            Return MyBase.Channel.getRejectedConcepts(authorityFile, dateFrom, dateTo, integerFrom, integerTo, format)
        End Function
        
        Public Function getRejectedConceptsAsync(ByVal authorityFile As String, ByVal dateFrom As String, ByVal dateTo As String, ByVal integerFrom As Integer, ByVal integerTo As Integer, ByVal format As String) As System.Threading.Tasks.Task(Of String) Implements Agrovoc.SKOSWS.getRejectedConceptsAsync
            Return MyBase.Channel.getRejectedConceptsAsync(authorityFile, dateFrom, dateTo, integerFrom, integerTo, format)
        End Function
        
        Public Function getConceptByKeyword2(ByVal ontologyName As String, ByVal searchString As String, ByVal format As String, ByVal searchMode As String, ByVal lang As String, ByVal outlang As String) As String Implements Agrovoc.SKOSWS.getConceptByKeyword2
            Return MyBase.Channel.getConceptByKeyword2(ontologyName, searchString, format, searchMode, lang, outlang)
        End Function
        
        Public Function getConceptByKeyword2Async(ByVal ontologyName As String, ByVal searchString As String, ByVal format As String, ByVal searchMode As String, ByVal lang As String, ByVal outlang As String) As System.Threading.Tasks.Task(Of String) Implements Agrovoc.SKOSWS.getConceptByKeyword2Async
            Return MyBase.Channel.getConceptByKeyword2Async(ontologyName, searchString, format, searchMode, lang, outlang)
        End Function
        
        Public Function getConceptByRelationshipValue(ByVal ontologyName As String, ByVal relationURI As String, ByVal value As String, ByVal searchMode As String, ByVal lang As String, ByVal format As String) As String Implements Agrovoc.SKOSWS.getConceptByRelationshipValue
            Return MyBase.Channel.getConceptByRelationshipValue(ontologyName, relationURI, value, searchMode, lang, format)
        End Function
        
        Public Function getConceptByRelationshipValueAsync(ByVal ontologyName As String, ByVal relationURI As String, ByVal value As String, ByVal searchMode As String, ByVal lang As String, ByVal format As String) As System.Threading.Tasks.Task(Of String) Implements Agrovoc.SKOSWS.getConceptByRelationshipValueAsync
            Return MyBase.Channel.getConceptByRelationshipValueAsync(ontologyName, relationURI, value, searchMode, lang, format)
        End Function
        
        Public Function getConceptByKeyword(ByVal ontologyName As String, ByVal searchString As String, ByVal format As String, ByVal searchMode As String, ByVal lang As String) As String Implements Agrovoc.SKOSWS.getConceptByKeyword
            Return MyBase.Channel.getConceptByKeyword(ontologyName, searchString, format, searchMode, lang)
        End Function
        
        Public Function getConceptByKeywordAsync(ByVal ontologyName As String, ByVal searchString As String, ByVal format As String, ByVal searchMode As String, ByVal lang As String) As System.Threading.Tasks.Task(Of String) Implements Agrovoc.SKOSWS.getConceptByKeywordAsync
            Return MyBase.Channel.getConceptByKeywordAsync(ontologyName, searchString, format, searchMode, lang)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function Agrovoc_SKOSWS_simpleSearchByModeLangXML(ByVal request As Agrovoc.simpleSearchByModeLangXMLRequest) As Agrovoc.simpleSearchByModeLangXMLResponse Implements Agrovoc.SKOSWS.simpleSearchByModeLangXML
            Return MyBase.Channel.simpleSearchByModeLangXML(request)
        End Function
        
        Public Function simpleSearchByModeLangXML(ByVal ontologyName As String, ByVal searchString As String, ByVal format As String, ByVal searchMode As String, ByVal lang As String, ByVal outlang() As String) As String
            Dim inValue As Agrovoc.simpleSearchByModeLangXMLRequest = New Agrovoc.simpleSearchByModeLangXMLRequest()
            inValue.ontologyName = ontologyName
            inValue.searchString = searchString
            inValue.format = format
            inValue.searchMode = searchMode
            inValue.lang = lang
            inValue.outlang = outlang
            Dim retVal As Agrovoc.simpleSearchByModeLangXMLResponse = CType(Me,Agrovoc.SKOSWS).simpleSearchByModeLangXML(inValue)
            Return retVal.simpleSearchByModeLangXMLReturn
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function Agrovoc_SKOSWS_simpleSearchByModeLangXMLAsync(ByVal request As Agrovoc.simpleSearchByModeLangXMLRequest) As System.Threading.Tasks.Task(Of Agrovoc.simpleSearchByModeLangXMLResponse) Implements Agrovoc.SKOSWS.simpleSearchByModeLangXMLAsync
            Return MyBase.Channel.simpleSearchByModeLangXMLAsync(request)
        End Function
        
        Public Function simpleSearchByModeLangXMLAsync(ByVal ontologyName As String, ByVal searchString As String, ByVal format As String, ByVal searchMode As String, ByVal lang As String, ByVal outlang() As String) As System.Threading.Tasks.Task(Of Agrovoc.simpleSearchByModeLangXMLResponse)
            Dim inValue As Agrovoc.simpleSearchByModeLangXMLRequest = New Agrovoc.simpleSearchByModeLangXMLRequest()
            inValue.ontologyName = ontologyName
            inValue.searchString = searchString
            inValue.format = format
            inValue.searchMode = searchMode
            inValue.lang = lang
            inValue.outlang = outlang
            Return CType(Me,Agrovoc.SKOSWS).simpleSearchByModeLangXMLAsync(inValue)
        End Function
        
        Public Function getAllLabelsByTermcode2(ByVal termcode As String, ByVal separator As String) As String Implements Agrovoc.SKOSWS.getAllLabelsByTermcode2
            Return MyBase.Channel.getAllLabelsByTermcode2(termcode, separator)
        End Function
        
        Public Function getAllLabelsByTermcode2Async(ByVal termcode As String, ByVal separator As String) As System.Threading.Tasks.Task(Of String) Implements Agrovoc.SKOSWS.getAllLabelsByTermcode2Async
            Return MyBase.Channel.getAllLabelsByTermcode2Async(termcode, separator)
        End Function
        
        Public Function getTermCodeByTerm(ByVal term As String) As String Implements Agrovoc.SKOSWS.getTermCodeByTerm
            Return MyBase.Channel.getTermCodeByTerm(term)
        End Function
        
        Public Function getTermCodeByTermAsync(ByVal term As String) As System.Threading.Tasks.Task(Of String) Implements Agrovoc.SKOSWS.getTermCodeByTermAsync
            Return MyBase.Channel.getTermCodeByTermAsync(term)
        End Function
        
        Public Function getURIByTermAndLangXML(ByVal ontologyName As String, ByVal term As String, ByVal searchMode As String, ByVal format As String, ByVal lang As String) As String Implements Agrovoc.SKOSWS.getURIByTermAndLangXML
            Return MyBase.Channel.getURIByTermAndLangXML(ontologyName, term, searchMode, format, lang)
        End Function
        
        Public Function getURIByTermAndLangXMLAsync(ByVal ontologyName As String, ByVal term As String, ByVal searchMode As String, ByVal format As String, ByVal lang As String) As System.Threading.Tasks.Task(Of String) Implements Agrovoc.SKOSWS.getURIByTermAndLangXMLAsync
            Return MyBase.Channel.getURIByTermAndLangXMLAsync(ontologyName, term, searchMode, format, lang)
        End Function
        
        Public Function getWebServicesVersion() As String Implements Agrovoc.SKOSWS.getWebServicesVersion
            Return MyBase.Channel.getWebServicesVersion
        End Function
        
        Public Function getWebServicesVersionAsync() As System.Threading.Tasks.Task(Of String) Implements Agrovoc.SKOSWS.getWebServicesVersionAsync
            Return MyBase.Channel.getWebServicesVersionAsync
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function Agrovoc_SKOSWS_getDefinitions(ByVal request As Agrovoc.getDefinitionsRequest) As Agrovoc.getDefinitionsResponse Implements Agrovoc.SKOSWS.getDefinitions
            Return MyBase.Channel.getDefinitions(request)
        End Function
        
        Public Function getDefinitions(ByVal termcode As String, ByVal languagecode As String) As String()
            Dim inValue As Agrovoc.getDefinitionsRequest = New Agrovoc.getDefinitionsRequest()
            inValue.termcode = termcode
            inValue.languagecode = languagecode
            Dim retVal As Agrovoc.getDefinitionsResponse = CType(Me,Agrovoc.SKOSWS).getDefinitions(inValue)
            Return retVal.getDefinitionsReturn
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function Agrovoc_SKOSWS_getDefinitionsAsync(ByVal request As Agrovoc.getDefinitionsRequest) As System.Threading.Tasks.Task(Of Agrovoc.getDefinitionsResponse) Implements Agrovoc.SKOSWS.getDefinitionsAsync
            Return MyBase.Channel.getDefinitionsAsync(request)
        End Function
        
        Public Function getDefinitionsAsync(ByVal termcode As String, ByVal languagecode As String) As System.Threading.Tasks.Task(Of Agrovoc.getDefinitionsResponse)
            Dim inValue As Agrovoc.getDefinitionsRequest = New Agrovoc.getDefinitionsRequest()
            inValue.termcode = termcode
            inValue.languagecode = languagecode
            Return CType(Me,Agrovoc.SKOSWS).getDefinitionsAsync(inValue)
        End Function
        
        Public Function getTermExpansion(ByVal ontologyName As String, ByVal searchString As String, ByVal format As String, ByVal searchMode As String, ByVal lang As String) As String Implements Agrovoc.SKOSWS.getTermExpansion
            Return MyBase.Channel.getTermExpansion(ontologyName, searchString, format, searchMode, lang)
        End Function
        
        Public Function getTermExpansionAsync(ByVal ontologyName As String, ByVal searchString As String, ByVal format As String, ByVal searchMode As String, ByVal lang As String) As System.Threading.Tasks.Task(Of String) Implements Agrovoc.SKOSWS.getTermExpansionAsync
            Return MyBase.Channel.getTermExpansionAsync(ontologyName, searchString, format, searchMode, lang)
        End Function
        
        Public Function getStatusConcept(ByVal ontologyName As String, ByVal conceptURI As String, ByVal lang As String) As String Implements Agrovoc.SKOSWS.getStatusConcept
            Return MyBase.Channel.getStatusConcept(ontologyName, conceptURI, lang)
        End Function
        
        Public Function getStatusConceptAsync(ByVal ontologyName As String, ByVal conceptURI As String, ByVal lang As String) As System.Threading.Tasks.Task(Of String) Implements Agrovoc.SKOSWS.getStatusConceptAsync
            Return MyBase.Channel.getStatusConceptAsync(ontologyName, conceptURI, lang)
        End Function
        
        Public Function getStatusList(ByVal ontologyName As String) As String Implements Agrovoc.SKOSWS.getStatusList
            Return MyBase.Channel.getStatusList(ontologyName)
        End Function
        
        Public Function getStatusListAsync(ByVal ontologyName As String) As System.Threading.Tasks.Task(Of String) Implements Agrovoc.SKOSWS.getStatusListAsync
            Return MyBase.Channel.getStatusListAsync(ontologyName)
        End Function
        
        Public Function getLanguageCode(ByVal localLang As String) As String Implements Agrovoc.SKOSWS.getLanguageCode
            Return MyBase.Channel.getLanguageCode(localLang)
        End Function
        
        Public Function getLanguageCodeAsync(ByVal localLang As String) As System.Threading.Tasks.Task(Of String) Implements Agrovoc.SKOSWS.getLanguageCodeAsync
            Return MyBase.Channel.getLanguageCodeAsync(localLang)
        End Function
        
        Public Function getStatusTerm(ByVal ontologyName As String, ByVal termCode As String, ByVal codeName As String, ByVal lang As String) As String Implements Agrovoc.SKOSWS.getStatusTerm
            Return MyBase.Channel.getStatusTerm(ontologyName, termCode, codeName, lang)
        End Function
        
        Public Function getStatusTermAsync(ByVal ontologyName As String, ByVal termCode As String, ByVal codeName As String, ByVal lang As String) As System.Threading.Tasks.Task(Of String) Implements Agrovoc.SKOSWS.getStatusTermAsync
            Return MyBase.Channel.getStatusTermAsync(ontologyName, termCode, codeName, lang)
        End Function
        
        Public Function reloadOWLModel(ByVal ontologyName As String) As String Implements Agrovoc.SKOSWS.reloadOWLModel
            Return MyBase.Channel.reloadOWLModel(ontologyName)
        End Function
        
        Public Function reloadOWLModelAsync(ByVal ontologyName As String) As System.Threading.Tasks.Task(Of String) Implements Agrovoc.SKOSWS.reloadOWLModelAsync
            Return MyBase.Channel.reloadOWLModelAsync(ontologyName)
        End Function
        
        Public Function getConceptObject(ByVal clsName As String, ByVal OntolgoyDatabase As String) As String Implements Agrovoc.SKOSWS.getConceptObject
            Return MyBase.Channel.getConceptObject(clsName, OntolgoyDatabase)
        End Function
        
        Public Function getConceptObjectAsync(ByVal clsName As String, ByVal OntolgoyDatabase As String) As System.Threading.Tasks.Task(Of String) Implements Agrovoc.SKOSWS.getConceptObjectAsync
            Return MyBase.Channel.getConceptObjectAsync(clsName, OntolgoyDatabase)
        End Function
        
        Public Function getLatestUpdates(ByVal ontologyName As String, ByVal dateFrom As String, ByVal dateTo As String, ByVal format As String) As String Implements Agrovoc.SKOSWS.getLatestUpdates
            Return MyBase.Channel.getLatestUpdates(ontologyName, dateFrom, dateTo, format)
        End Function
        
        Public Function getLatestUpdatesAsync(ByVal ontologyName As String, ByVal dateFrom As String, ByVal dateTo As String, ByVal format As String) As System.Threading.Tasks.Task(Of String) Implements Agrovoc.SKOSWS.getLatestUpdatesAsync
            Return MyBase.Channel.getLatestUpdatesAsync(ontologyName, dateFrom, dateTo, format)
        End Function
        
        Public Function getFullAuthority(ByVal ontologyName As String, ByVal searchString As String, ByVal searchMode As String, ByVal lang As String, ByVal format As String) As String Implements Agrovoc.SKOSWS.getFullAuthority
            Return MyBase.Channel.getFullAuthority(ontologyName, searchString, searchMode, lang, format)
        End Function
        
        Public Function getFullAuthorityAsync(ByVal ontologyName As String, ByVal searchString As String, ByVal searchMode As String, ByVal lang As String, ByVal format As String) As System.Threading.Tasks.Task(Of String) Implements Agrovoc.SKOSWS.getFullAuthorityAsync
            Return MyBase.Channel.getFullAuthorityAsync(ontologyName, searchString, searchMode, lang, format)
        End Function
        
        Public Function getListofURI(ByVal ontologyName As String, ByVal uriStart As String, ByVal numResult As String) As String Implements Agrovoc.SKOSWS.getListofURI
            Return MyBase.Channel.getListofURI(ontologyName, uriStart, numResult)
        End Function
        
        Public Function getListofURIAsync(ByVal ontologyName As String, ByVal uriStart As String, ByVal numResult As String) As System.Threading.Tasks.Task(Of String) Implements Agrovoc.SKOSWS.getListofURIAsync
            Return MyBase.Channel.getListofURIAsync(ontologyName, uriStart, numResult)
        End Function
        
        Public Function getTermsByURI(ByVal ontologyName As String, ByVal conceptURI As String, ByVal lang As String, ByVal descriptor As String, ByVal format As String, ByVal status As String) As String Implements Agrovoc.SKOSWS.getTermsByURI
            Return MyBase.Channel.getTermsByURI(ontologyName, conceptURI, lang, descriptor, format, status)
        End Function
        
        Public Function getTermsByURIAsync(ByVal ontologyName As String, ByVal conceptURI As String, ByVal lang As String, ByVal descriptor As String, ByVal format As String, ByVal status As String) As System.Threading.Tasks.Task(Of String) Implements Agrovoc.SKOSWS.getTermsByURIAsync
            Return MyBase.Channel.getTermsByURIAsync(ontologyName, conceptURI, lang, descriptor, format, status)
        End Function
        
        Public Function getConceptByURI(ByVal ontologyName As String, ByVal conceptURI As String, ByVal format As String) As String Implements Agrovoc.SKOSWS.getConceptByURI
            Return MyBase.Channel.getConceptByURI(ontologyName, conceptURI, format)
        End Function
        
        Public Function getConceptByURIAsync(ByVal ontologyName As String, ByVal conceptURI As String, ByVal format As String) As System.Threading.Tasks.Task(Of String) Implements Agrovoc.SKOSWS.getConceptByURIAsync
            Return MyBase.Channel.getConceptByURIAsync(ontologyName, conceptURI, format)
        End Function
        
        Public Function suggestTerm(ByVal ontologyName As String, ByVal label As String, ByVal lang As String, ByVal [namespace] As String, ByVal parentURI As String) As String Implements Agrovoc.SKOSWS.suggestTerm
            Return MyBase.Channel.suggestTerm(ontologyName, label, lang, [namespace], parentURI)
        End Function
        
        Public Function suggestTermAsync(ByVal ontologyName As String, ByVal label As String, ByVal lang As String, ByVal [namespace] As String, ByVal parentURI As String) As System.Threading.Tasks.Task(Of String) Implements Agrovoc.SKOSWS.suggestTermAsync
            Return MyBase.Channel.suggestTermAsync(ontologyName, label, lang, [namespace], parentURI)
        End Function
        
        Public Function getReleaseDate() As String Implements Agrovoc.SKOSWS.getReleaseDate
            Return MyBase.Channel.getReleaseDate
        End Function
        
        Public Function getReleaseDateAsync() As System.Threading.Tasks.Task(Of String) Implements Agrovoc.SKOSWS.getReleaseDateAsync
            Return MyBase.Channel.getReleaseDateAsync
        End Function
        
        Public Function getAvailableCode(ByVal ontologyName As String) As String Implements Agrovoc.SKOSWS.getAvailableCode
            Return MyBase.Channel.getAvailableCode(ontologyName)
        End Function
        
        Public Function getAvailableCodeAsync(ByVal ontologyName As String) As System.Threading.Tasks.Task(Of String) Implements Agrovoc.SKOSWS.getAvailableCodeAsync
            Return MyBase.Channel.getAvailableCodeAsync(ontologyName)
        End Function
        
        Public Function getCodesByURI(ByVal Ontology As String, ByVal ConceptURI As String, ByVal CodeName As String) As String Implements Agrovoc.SKOSWS.getCodesByURI
            Return MyBase.Channel.getCodesByURI(Ontology, ConceptURI, CodeName)
        End Function
        
        Public Function getCodesByURIAsync(ByVal Ontology As String, ByVal ConceptURI As String, ByVal CodeName As String) As System.Threading.Tasks.Task(Of String) Implements Agrovoc.SKOSWS.getCodesByURIAsync
            Return MyBase.Channel.getCodesByURIAsync(Ontology, ConceptURI, CodeName)
        End Function
        
        Public Function getPossibleRelationsFromConceptURI(ByVal ontologyName As String, ByVal conceptURI As String, ByVal relationType As String) As String Implements Agrovoc.SKOSWS.getPossibleRelationsFromConceptURI
            Return MyBase.Channel.getPossibleRelationsFromConceptURI(ontologyName, conceptURI, relationType)
        End Function
        
        Public Function getPossibleRelationsFromConceptURIAsync(ByVal ontologyName As String, ByVal conceptURI As String, ByVal relationType As String) As System.Threading.Tasks.Task(Of String) Implements Agrovoc.SKOSWS.getPossibleRelationsFromConceptURIAsync
            Return MyBase.Channel.getPossibleRelationsFromConceptURIAsync(ontologyName, conceptURI, relationType)
        End Function
        
        Public Function getRelatedValuesFromConceptURIRelationURI(ByVal ontologyName As String, ByVal conceptURI As String, ByVal relationURI As String) As String Implements Agrovoc.SKOSWS.getRelatedValuesFromConceptURIRelationURI
            Return MyBase.Channel.getRelatedValuesFromConceptURIRelationURI(ontologyName, conceptURI, relationURI)
        End Function
        
        Public Function getRelatedValuesFromConceptURIRelationURIAsync(ByVal ontologyName As String, ByVal conceptURI As String, ByVal relationURI As String) As System.Threading.Tasks.Task(Of String) Implements Agrovoc.SKOSWS.getRelatedValuesFromConceptURIRelationURIAsync
            Return MyBase.Channel.getRelatedValuesFromConceptURIRelationURIAsync(ontologyName, conceptURI, relationURI)
        End Function
    End Class
End Namespace
